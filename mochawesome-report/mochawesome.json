{
  "stats": {
    "suites": 7,
    "tests": 41,
    "passes": 41,
    "pending": 0,
    "failures": 0,
    "start": "2019-05-16T05:09:09.170Z",
    "end": "2019-05-16T05:13:28.789Z",
    "duration": 259619,
    "testsRegistered": 41,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "01a8ff44-51a6-41ea-ac0b-dd2354f81732",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "bdddd488-ddfa-4c42-9eb6-52c0213e1335",
        "title": "Add project functionality",
        "fullFile": "E:\\tdt\\test\\addProjectPage.test.js",
        "file": "\\test\\addProjectPage.test.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "Add project functionality \"before each\" hook",
            "timedOut": false,
            "duration": 5186,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "page = new Page();\ndriver = page.driver;\ndriver.manage().window().fullscreen();\nawait page.visit('http://localhost:8080')\nawait page.loginFromAddProjectPage();",
            "err": {},
            "isRoot": false,
            "uuid": "63806542-f48f-49fa-b748-ce72c15b0941",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook",
            "fullTitle": "Add project functionality \"after each\" hook",
            "timedOut": false,
            "duration": 944,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "await page.quit()",
            "err": {},
            "isRoot": false,
            "uuid": "7d794acc-ade8-4bfa-a3c9-c32bb7100b5e",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "should find the project name input, genre select, description textarea and confirm button",
            "fullTitle": "Add project functionality should find the project name input, genre select, description textarea and confirm button",
            "timedOut": false,
            "duration": 81,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.findAddProjectInputs();\nexpect(result.projectNameInputEnabled).to.equal(true);\nexpect(result.genreSelectEnabled).to.equal(true);\nexpect(result.descriptionTextareaEnabled).to.equal(true);\nexpect(result.confirmButtonText).to.contain('Confirm');",
            "err": {},
            "isRoot": false,
            "uuid": "ea7d5d7f-c1f3-4552-a3b1-b6fbd4580938",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should add a new project when all the data are entered corectly",
            "fullTitle": "Add project functionality should add a new project when all the data are entered corectly",
            "timedOut": false,
            "duration": 536,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.submitValuesAndGetResult('test','Jazz','description test');\nexpect(result).to.contains('http://localhost:8080');",
            "err": {},
            "isRoot": false,
            "uuid": "9f083c0a-4a64-4985-b572-78197f78d758",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should show required message when insert project name only",
            "fullTitle": "Add project functionality should show required message when insert project name only",
            "timedOut": false,
            "duration": 379,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.submitValuesAndGetResult('Project 9','','description');\nexpect(result).to.contain('Required');",
            "err": {},
            "isRoot": false,
            "uuid": "eb2f9584-4db0-4ff7-864d-b9434ead9bec",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should show required message select genre only",
            "fullTitle": "Add project functionality should show required message select genre only",
            "timedOut": false,
            "duration": 434,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.submitValuesAndGetResult('','Jazz','description');\nexpect(result).to.contain('Required');",
            "err": {},
            "isRoot": false,
            "uuid": "d73c8c0c-2305-4d28-ad27-cfa605640885",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "ea7d5d7f-c1f3-4552-a3b1-b6fbd4580938",
          "9f083c0a-4a64-4985-b572-78197f78d758",
          "eb2f9584-4db0-4ff7-864d-b9434ead9bec",
          "d73c8c0c-2305-4d28-ad27-cfa605640885"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1430,
        "root": false,
        "rootEmpty": false,
        "_timeout": 50000
      },
      {
        "uuid": "13da2204-c387-4f56-92ef-a5bd81af0243",
        "title": "Login functionality test",
        "fullFile": "E:\\tdt\\test\\loginPage.test.js",
        "file": "\\test\\loginPage.test.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "Login functionality test \"before each\" hook",
            "timedOut": false,
            "duration": 4438,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "page = new Page();\ndriver = page.driver;\ndriver.manage().window().fullscreen();\nawait page.visit('http://localhost:8080/login')",
            "err": {},
            "isRoot": false,
            "uuid": "d9ac4eed-058c-4434-a6b3-f44f00bc06c1",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook",
            "fullTitle": "Login functionality test \"after each\" hook",
            "timedOut": false,
            "duration": 960,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "await page.quit();",
            "err": {},
            "isRoot": false,
            "uuid": "dc492f17-018d-42eb-94e8-ae93ce0bfbc3",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "should find the email input, password input and login button",
            "fullTitle": "Login functionality test should find the email input, password input and login button",
            "timedOut": false,
            "duration": 133,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.findInputAndButton();\nexpect(result.emailInputEnabled).to.equal(true);\nexpect(result.passwordInputEnabled).to.equal(true)\nexpect(result.loginButtonText).to.include('Login')",
            "err": {},
            "isRoot": false,
            "uuid": "eb606e8d-b8c7-45a5-ad92-d691ca04db54",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should show an error when insert wrong email and click login button",
            "fullTitle": "Login functionality test should show an error when insert wrong email and click login button",
            "timedOut": false,
            "duration": 752,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.submitKeywordAndGetResult(\"wrongEmail@asdasd.com\", \"parola\");\nexpect(result).to.equal('There is no account with that email address.');",
            "err": {},
            "isRoot": false,
            "uuid": "942ee5a8-5f39-478a-8a45-3b2238713871",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should show an error when insert wrong password and click login button",
            "fullTitle": "Login functionality test should show an error when insert wrong password and click login button",
            "timedOut": false,
            "duration": 598,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.submitKeywordAndGetResult(\"admin@splicer.com\", \"parola\");\nexpect(result).to.equal('Password does not match.');",
            "err": {},
            "isRoot": false,
            "uuid": "7b6495df-b3da-4907-8ff9-e6155800c84e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should show an error when insert nothing and click login button",
            "fullTitle": "Login functionality test should show an error when insert nothing and click login button",
            "timedOut": false,
            "duration": 467,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.submitKeywordAndGetResult(\"\", \"\");\nexpect(result).to.equal('Please fill out the required fields.');",
            "err": {},
            "isRoot": false,
            "uuid": "a3e62011-3ab9-4c5c-9dac-c51654f27caa",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should redirect to projects page when insert correct data and click login button",
            "fullTitle": "Login functionality test should redirect to projects page when insert correct data and click login button",
            "timedOut": false,
            "duration": 921,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.submitKeywordForLoginSuccess();\nexpect(result).to.contains('projects')",
            "err": {},
            "isRoot": false,
            "uuid": "04c5cb00-b090-496d-b027-6930fa51ff55",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "eb606e8d-b8c7-45a5-ad92-d691ca04db54",
          "942ee5a8-5f39-478a-8a45-3b2238713871",
          "7b6495df-b3da-4907-8ff9-e6155800c84e",
          "a3e62011-3ab9-4c5c-9dac-c51654f27caa",
          "04c5cb00-b090-496d-b027-6930fa51ff55"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 2871,
        "root": false,
        "rootEmpty": false,
        "_timeout": 50000
      },
      {
        "uuid": "f037903d-1936-43f4-825e-1404ddfc74ff",
        "title": "Filter projects functionality automated test",
        "fullFile": "E:\\tdt\\test\\projectsPage.test.js",
        "file": "\\test\\projectsPage.test.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "Filter projects functionality automated test \"before each\" hook",
            "timedOut": false,
            "duration": 5243,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "page = new Page();\ndriver = page.driver;\ndriver.manage().window().fullscreen();\nawait page.visit('http://localhost:8080')\nawait page.loginFromProjectsPage();",
            "err": {},
            "isRoot": false,
            "uuid": "a259c57a-2a64-4575-931a-d8615729b1b4",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook",
            "fullTitle": "Filter projects functionality automated test \"after each\" hook",
            "timedOut": false,
            "duration": 698,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "await page.quit();",
            "err": {},
            "isRoot": false,
            "uuid": "41ef90b6-646d-4ab1-8589-a983b1021855",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "should find the name input and genre",
            "fullTitle": "Filter projects functionality automated test should find the name input and genre",
            "timedOut": false,
            "duration": 92,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.findInputs();\nexpect(result.nameFilterInputEnabled).to.equal(true);\nexpect(result.genreFilterInputEnabled).to.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "cfdfa66d-1697-4ca8-b9d7-39a19131fd2b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should filter projects by a correct name",
            "fullTitle": "Filter projects functionality automated test should filter projects by a correct name",
            "timedOut": false,
            "duration": 184,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.submitNameAndGenreAndGetResult(\"Project\", \"\");\nexpect(result.length).to.greaterThan(0)",
            "err": {},
            "isRoot": false,
            "uuid": "e661f8c0-d69f-4c78-88f3-be6e20b6434b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should filter projects by a correct genre",
            "fullTitle": "Filter projects functionality automated test should filter projects by a correct genre",
            "timedOut": false,
            "duration": 186,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.submitNameAndGenreAndGetResult(\"\", \"Trap\");\nexpect(result.length).to.greaterThan(0)",
            "err": {},
            "isRoot": false,
            "uuid": "b6583dd8-1267-4b52-b91e-0618d45b12ef",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should filter 0 projects by a incorrect name",
            "fullTitle": "Filter projects functionality automated test should filter 0 projects by a incorrect name",
            "timedOut": false,
            "duration": 187,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.submitNameAndGenreAndGetResult(\"asdasda\", \"\");\nexpect(result.length).to.be.at.least(0);",
            "err": {},
            "isRoot": false,
            "uuid": "0ec09a22-62e3-4462-929e-06a13636f554",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should filter 0 projects by a incorrect genre",
            "fullTitle": "Filter projects functionality automated test should filter 0 projects by a incorrect genre",
            "timedOut": false,
            "duration": 215,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.submitNameAndGenreAndGetResult(\"\", \"asdasdasda\");\nexpect(result.length).to.greaterThan(0);",
            "err": {},
            "isRoot": false,
            "uuid": "68449792-b8b0-4583-81ed-fd432c869c6b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should filter projects by name and genre",
            "fullTitle": "Filter projects functionality automated test should filter projects by name and genre",
            "timedOut": false,
            "duration": 283,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.submitNameAndGenreAndGetResult(\"Project\", \"Trap\");\nexpect(result.length).to.greaterThan(0)",
            "err": {},
            "isRoot": false,
            "uuid": "833e25ab-f3b5-4fd7-bd3c-1ad541dc807e",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "cfdfa66d-1697-4ca8-b9d7-39a19131fd2b",
          "e661f8c0-d69f-4c78-88f3-be6e20b6434b",
          "b6583dd8-1267-4b52-b91e-0618d45b12ef",
          "0ec09a22-62e3-4462-929e-06a13636f554",
          "68449792-b8b0-4583-81ed-fd432c869c6b",
          "833e25ab-f3b5-4fd7-bd3c-1ad541dc807e"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1147,
        "root": false,
        "rootEmpty": false,
        "_timeout": 50000
      },
      {
        "uuid": "0d0b1716-fc4e-46f6-8a8c-8832acf16285",
        "title": "Delete project functionality",
        "fullFile": "E:\\tdt\\test\\projectsPage.test.js",
        "file": "\\test\\projectsPage.test.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "Delete project functionality \"before each\" hook",
            "timedOut": false,
            "duration": 5365,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "page = new Page();\ndriver = page.driver;\ndriver.manage().window().fullscreen();\nawait page.visit('http://localhost:8080')\nawait page.loginFromProjectsPage();",
            "err": {},
            "isRoot": false,
            "uuid": "b3e622f4-40c7-4d11-9633-986af0611f64",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook",
            "fullTitle": "Delete project functionality \"after each\" hook",
            "timedOut": false,
            "duration": 1000,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "await page.quit();",
            "err": {},
            "isRoot": false,
            "uuid": "aa0756ce-7a1e-4a25-980a-277e96da3be0",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "should find the delete button",
            "fullTitle": "Delete project functionality should find the delete button",
            "timedOut": false,
            "duration": 143,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.findIcons();\nexpect(result.deleteIconEnabled).to.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "a3820d7f-6c60-4e86-bd2e-76d1ec840af2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should open the modal when delete button is clicked",
            "fullTitle": "Delete project functionality should open the modal when delete button is clicked",
            "timedOut": false,
            "duration": 303,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.clickOnDeleteIcon();\nexpect(result).to.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "6bde671f-5f33-41ab-aa39-01d126bd2b9e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should close the modal when cancel button is clicked",
            "fullTitle": "Delete project functionality should close the modal when cancel button is clicked",
            "timedOut": false,
            "duration": 525,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.clickOnModalCancelButton();\nexpect(result).to.equal(false);",
            "err": {},
            "isRoot": false,
            "uuid": "7a1070d5-20a1-42cb-82d7-a27e3775fe3c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should close the modal when confirm is clicked",
            "fullTitle": "Delete project functionality should close the modal when confirm is clicked",
            "timedOut": false,
            "duration": 548,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.clickOnModalConfirmButton();\nexpect(result).to.equal(false);",
            "err": {},
            "isRoot": false,
            "uuid": "0125533e-c4b1-4d63-a8cd-4d65c2337391",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should close the modal when close icon is clicked",
            "fullTitle": "Delete project functionality should close the modal when close icon is clicked",
            "timedOut": false,
            "duration": 491,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.clickOnModalCloseIcon();\nexpect(result).to.equal(false);",
            "err": {},
            "isRoot": false,
            "uuid": "9629c208-b828-4f37-9e97-5653349ff75f",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "a3820d7f-6c60-4e86-bd2e-76d1ec840af2",
          "6bde671f-5f33-41ab-aa39-01d126bd2b9e",
          "7a1070d5-20a1-42cb-82d7-a27e3775fe3c",
          "0125533e-c4b1-4d63-a8cd-4d65c2337391",
          "9629c208-b828-4f37-9e97-5653349ff75f"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 2010,
        "root": false,
        "rootEmpty": false,
        "_timeout": 50000
      },
      {
        "uuid": "40f554c2-5fe5-4593-98e8-76c6bc2f55d5",
        "title": "Quick tests",
        "fullFile": "E:\\tdt\\test\\projectsPage.test.js",
        "file": "\\test\\projectsPage.test.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "Quick tests \"before each\" hook",
            "timedOut": false,
            "duration": 6089,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "page = new Page();\ndriver = page.driver;\ndriver.manage().window().fullscreen();\nawait page.visit('http://localhost:8080')\nawait page.loginFromProjectsPage();",
            "err": {},
            "isRoot": false,
            "uuid": "5d0988ef-3341-41cd-806a-f756a1863950",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook",
            "fullTitle": "Quick tests \"after each\" hook",
            "timedOut": false,
            "duration": 845,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "await page.quit();",
            "err": {},
            "isRoot": false,
            "uuid": "9ea4e359-0dda-4488-8165-422e8ce1f84c",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "should find profile logo",
            "fullTitle": "Quick tests should find profile logo",
            "timedOut": false,
            "duration": 172,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.findIcons();\nexpect(result.userLogoEnabled).to.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "34b586d6-22fe-47b0-829e-e9a8e80903eb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should show the dropdown when the profile logo is clicked",
            "fullTitle": "Quick tests should show the dropdown when the profile logo is clicked",
            "timedOut": false,
            "duration": 286,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.clickOnUserProfileLogo();\nexpect(result).to.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "b666d152-4554-432f-8ab2-84512f66e476",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should find profile option and logout option",
            "fullTitle": "Quick tests should find profile option and logout option",
            "timedOut": false,
            "duration": 161,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.findIcons();\nexpect(result.userProfileOptionEnabled).to.equal(true);\nexpect(result.userLogoutOptionEnabled).to.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "2219f50d-9a9b-49cf-974d-2071d4406fa2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should redirect to profile page when profile option is clicked",
            "fullTitle": "Quick tests should redirect to profile page when profile option is clicked",
            "timedOut": false,
            "duration": 640,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.clickOnProfileOption();\nexpect(result).to.contains('profile');",
            "err": {},
            "isRoot": false,
            "uuid": "e7a22b13-264c-41cf-b995-f572f96f23b7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should redirect to login page when logout is clicked",
            "fullTitle": "Quick tests should redirect to login page when logout is clicked",
            "timedOut": false,
            "duration": 800,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.clickOnLogoutOption();\nexpect(result).to.contains('login');",
            "err": {},
            "isRoot": false,
            "uuid": "b0d09307-e78b-4b1f-bb4c-b0d187ecf742",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should find the hamburger icon",
            "fullTitle": "Quick tests should find the hamburger icon",
            "timedOut": false,
            "duration": 202,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.findIcons();\nexpect(result.hamburgerIconEnabled).to.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "9126a312-a2b8-4611-8e72-9e60e3d6a345",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should close the sidebar when hamburger icon is clicked",
            "fullTitle": "Quick tests should close the sidebar when hamburger icon is clicked",
            "timedOut": false,
            "duration": 466,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.clickOnHamburgerIcon(1);\nexpect(result.hiddenSidebarEnabled).to.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "f9625882-86b7-46ab-9f67-faba08dd8b6e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should reopen the sidebar when the hamburger icon is clicked twice",
            "fullTitle": "Quick tests should reopen the sidebar when the hamburger icon is clicked twice",
            "timedOut": false,
            "duration": 636,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.clickOnHamburgerIcon(2);\nexpect(result.sidebarEnabled).to.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "5255ed97-7320-4e4a-b1a7-a630e87d3f3b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should find the edit button",
            "fullTitle": "Quick tests should find the edit button",
            "timedOut": false,
            "duration": 141,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.findIcons(); \nexpect(result.openButtonEnabled).to.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "fecf0617-7be0-4628-a2c0-848631abffce",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should open edit page if edit button is clicked",
            "fullTitle": "Quick tests should open edit page if edit button is clicked",
            "timedOut": false,
            "duration": 384,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.clickOnOpenButton();\nexpect(result).to.contains('project');",
            "err": {},
            "isRoot": false,
            "uuid": "9dbf78ec-3598-40bc-8702-bd38b6549bbd",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "34b586d6-22fe-47b0-829e-e9a8e80903eb",
          "b666d152-4554-432f-8ab2-84512f66e476",
          "2219f50d-9a9b-49cf-974d-2071d4406fa2",
          "e7a22b13-264c-41cf-b995-f572f96f23b7",
          "b0d09307-e78b-4b1f-bb4c-b0d187ecf742",
          "9126a312-a2b8-4611-8e72-9e60e3d6a345",
          "f9625882-86b7-46ab-9f67-faba08dd8b6e",
          "5255ed97-7320-4e4a-b1a7-a630e87d3f3b",
          "fecf0617-7be0-4628-a2c0-848631abffce",
          "9dbf78ec-3598-40bc-8702-bd38b6549bbd"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 3888,
        "root": false,
        "rootEmpty": false,
        "_timeout": 50000
      },
      {
        "uuid": "116f7ff0-bcc6-4dcd-b142-d9a51cce14f4",
        "title": "Register page [Multivariable testing]",
        "fullFile": "E:\\tdt\\test\\registerPage.test.js",
        "file": "\\test\\registerPage.test.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "Register page [Multivariable testing] \"before each\" hook",
            "timedOut": false,
            "duration": 5131,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "page = new Page();\ndriver = page.driver;\ndriver.manage().window().fullscreen();\nawait page.visit('http://localhost:8080/register')",
            "err": {},
            "isRoot": false,
            "uuid": "12f56570-26bf-49c4-b66e-54f1e00cd4f7",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook",
            "fullTitle": "Register page [Multivariable testing] \"after each\" hook",
            "timedOut": false,
            "duration": 778,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "await page.quit();",
            "err": {},
            "isRoot": false,
            "uuid": "c67ddce5-14fd-43c3-971d-aa88ebc6a1ea",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "should find the register inputs and register button",
            "fullTitle": "Register page [Multivariable testing] should find the register inputs and register button",
            "timedOut": false,
            "duration": 292,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.findInputsRegister();\nexpect(result.emailInputEnabled).to.equal(true);\nexpect(result.passwordInputEnabled).to.equal(true);\nexpect(result.firstNameInputEnabled).to.equal(true);\nexpect(result.lastNameInputEnabled).to.equal(true);\nexpect(result.usernameInputEnabled).to.equal(true);\nexpect(result.registerButtonEnabled).to.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "26f779a6-ec25-4743-abd0-208421f06f3e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should redirect to login when everything is correct",
            "fullTitle": "Register page [Multivariable testing] should redirect to login when everything is correct",
            "timedOut": false,
            "duration": 1010,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.submitKeywordForRegisterSuccess('mark@ronson.com');\nexpect(result).to.contain('login');",
            "err": {},
            "isRoot": false,
            "uuid": "54fcd352-27af-463e-ae25-62bbdc106416",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should show an error if the email already exists",
            "fullTitle": "Register page [Multivariable testing] should show an error if the email already exists",
            "timedOut": false,
            "duration": 866,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.submitKeywordAndGetResultRegister('admin@splicer.com');\nexpect(result).to.equal('Email already in use.');",
            "err": {},
            "isRoot": false,
            "uuid": "8e361fb8-fb84-4916-97da-3cd83bd2762c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should show an email input error when email is not correct",
            "fullTitle": "Register page [Multivariable testing] should show an email input error when email is not correct",
            "timedOut": false,
            "duration": 1024,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.sumbitWrongEmailForRegister('email');\nexpect(result).to.contain('register');",
            "err": {},
            "isRoot": false,
            "uuid": "7d59d6ad-d7a5-4ac6-9e49-b5f98aefe287",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "26f779a6-ec25-4743-abd0-208421f06f3e",
          "54fcd352-27af-463e-ae25-62bbdc106416",
          "8e361fb8-fb84-4916-97da-3cd83bd2762c",
          "7d59d6ad-d7a5-4ac6-9e49-b5f98aefe287"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 3192,
        "root": false,
        "rootEmpty": false,
        "_timeout": 50000
      },
      {
        "uuid": "71b8aa5f-f84e-4ad4-ab8a-fd4fbb4f2d8f",
        "title": "Sounds page [Multivariable testing]",
        "fullFile": "E:\\tdt\\test\\soundsPage.test.js",
        "file": "\\test\\soundsPage.test.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "Sounds page [Multivariable testing] \"before each\" hook",
            "timedOut": false,
            "duration": 5410,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "page = new Page();\ndriver = page.driver;\ndriver.manage().window().fullscreen();\nawait page.visit('http://localhost:8080')\nawait page.loginFromSoundsPage();\nawait driver.get('http://localhost:8080/sounds')",
            "err": {},
            "isRoot": false,
            "uuid": "76ec3fb6-c150-4ad0-834a-adeb95a45f26",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook",
            "fullTitle": "Sounds page [Multivariable testing] \"after each\" hook",
            "timedOut": false,
            "duration": 908,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "await page.quit();",
            "err": {},
            "isRoot": false,
            "uuid": "8d6a0448-4ee8-44dc-b528-a4c983afd24c",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "should find the name and type inputs",
            "fullTitle": "Sounds page [Multivariable testing] should find the name and type inputs",
            "timedOut": false,
            "duration": 39,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.findInputsSoundsPage();\nexpect(result.nameInputEnabled).to.equal(true);\nexpect(result.typeInputEnabled).to.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "2bcf1485-0f34-4a3d-bc81-bd851b8d9a1b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should find no sounds when incorrect type is enetered for a name",
            "fullTitle": "Sounds page [Multivariable testing] should find no sounds when incorrect type is enetered for a name",
            "timedOut": false,
            "duration": 93,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.sendKeywordsAndGetResultE('bass 1- swag 114bpm.mp3', 'Fx');\nexpect(result.length).to.equal(undefined);",
            "err": {},
            "isRoot": false,
            "uuid": "3ff1578f-d2f7-4294-a11c-4a5cf41b9c30",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should find sounds when correct type is enetered for a name",
            "fullTitle": "Sounds page [Multivariable testing] should find sounds when correct type is enetered for a name",
            "timedOut": false,
            "duration": 118,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.sendKeywordsAndGetResult('ah - mind 96bpm.mp3', 'Closed Hihat');\nexpect(result.length).to.greaterThan(0);",
            "err": {},
            "isRoot": false,
            "uuid": "1174e5df-8495-4cc2-80b5-4ce81d13ad23",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should find no sounds when name and type are incorrect",
            "fullTitle": "Sounds page [Multivariable testing] should find no sounds when name and type are incorrect",
            "timedOut": false,
            "duration": 90,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.sendKeywordsAndGetResultE('asda', 'asda');\nexpect(result.length).to.equal(undefined);",
            "err": {},
            "isRoot": false,
            "uuid": "c3329d06-16e7-464e-9586-f6ceb6a3dd37",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should find sounds when a correct name is entered for a correct type",
            "fullTitle": "Sounds page [Multivariable testing] should find sounds when a correct name is entered for a correct type",
            "timedOut": false,
            "duration": 102,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.sendKeywordsAndGetResult('chord 2 - cruel 67bpm.mp3', 'Fx');\nexpect(result.length).to.greaterThan(0);",
            "err": {},
            "isRoot": false,
            "uuid": "2c9a99e2-9506-4290-a634-c6d9ecb62c5d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should find no sounds when an incorrect name is entered for a correct type",
            "fullTitle": "Sounds page [Multivariable testing] should find no sounds when an incorrect name is entered for a correct type",
            "timedOut": false,
            "duration": 84,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.sendKeywordsAndGetResultE('asdasda', 'Fx');\nexpect(result.length).to.equal(undefined);",
            "err": {},
            "isRoot": false,
            "uuid": "2cd47d3e-7814-4bfe-a6b1-2310cd04bcce",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should find  sounds when empty name and typs are inserted",
            "fullTitle": "Sounds page [Multivariable testing] should find  sounds when empty name and typs are inserted",
            "timedOut": false,
            "duration": 76,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const result = await page.sendKeywordsAndGetResult('', '');\nexpect(result.length).to.greaterThan(0);",
            "err": {},
            "isRoot": false,
            "uuid": "f301137f-2946-4b05-aa17-437aab4f6f7f",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "2bcf1485-0f34-4a3d-bc81-bd851b8d9a1b",
          "3ff1578f-d2f7-4294-a11c-4a5cf41b9c30",
          "1174e5df-8495-4cc2-80b5-4ce81d13ad23",
          "c3329d06-16e7-464e-9586-f6ceb6a3dd37",
          "2c9a99e2-9506-4290-a634-c6d9ecb62c5d",
          "2cd47d3e-7814-4bfe-a6b1-2310cd04bcce",
          "f301137f-2946-4b05-aa17-437aab4f6f7f"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 602,
        "root": false,
        "rootEmpty": false,
        "_timeout": 50000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}